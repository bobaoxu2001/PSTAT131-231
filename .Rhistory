roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_knn<-augment(knn_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_knn_curve <- augment(knn_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
knn <- autoplot(roc_knn_curve)
lasso
boost
random
knn
result_auc <- c(auc_test_lasso$.estimate,
auc_test_boost$.estimate,
auc_test_rand$.estimate,
auc_test_knn$.estimate)
iris_mod_names <- c(
"lasso",
"boost",
"random forest",
"knn")
model_test <- tibble(Model = iris_mod_names,
roc_auc = result_auc)
model_test <- model_test %>%
arrange(-result_auc)
model_test
result_acc <- c(acc_test_lasso$.estimate,
acc_test_boost$.estimate,
acc_test_rand$.estimate,
acc_test_knn$.estimate)
iris_acc_test <- tibble(Model = iris_mod_names,
Accuracy = result_acc)
acc_test <- iris_acc_test %>%
arrange(-result_acc)
acc_test
result_acc <- c(acc_test_lasso$.estimate,
acc_test_boost$.estimate,
acc_test_rand$.estimate,
acc_test_knn$.estimate)
iris_acc_test <- tibble(Model = iris_mod_names,
Accuracy = result_acc)
acc_test
result_auc <- c(auc_test_lasso$.estimate,
auc_test_boost$.estimate,
auc_test_rand$.estimate,
auc_test_knn$.estimate)
iris_mod_names <- c(
"lasso",
"boost",
"random forest",
"knn")
model_test <- tibble(Model = iris_mod_names,
roc_auc = result_auc)
model_test
iris_split <- iris %>%
initial_split(strata = species, prop = 0.8)
iris_train <- training(iris_split)
iris_test <- testing(iris_split)
dim(iris_train)
dim(iris_test)
iris_train %>%
ggplot(aes(x=sepal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=sepal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x =species)) +
geom_bar()
iris_recipe <-
recipe(species ~ sepal_length_cm + sepal_width_cm + petal_length_cm + petal_width_cm,
data = iris) %>%
step_dummy(all_nominal_predictors()) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
autoplot(tune_res)
autoplot(tune_res_boost)
autoplot(tune_res_forest)
autoplot(tune_res_knn)
tune_lasso_roc <- augment(lasso_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_boost_roc <- augment(final_fit_boost, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_rand_roc <- augment(random_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_knn_roc <- augment(knn_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
model_roc <- c(tune_lasso_roc$.estimate,
tune_boost_roc$.estimate,
tune_rand_roc$.estimate,
tune_knn_roc$.estimate)
iris_model_names <- c(
"lasso",
"boosted_tree",
"random_forest",
"knn")
model_results <- tibble(Model = iris_model_names,
roc_auc = model_roc)
modelresults <- model_results %>%
arrange(-model_roc)
modelresults
#lasso
lasso_pre <- predict(lasso_final_fit,new_data=iris_test,type="class")
auc_test_lasso<-augment(lasso_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_lasso<-augment(lasso_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_lasso_curve <- augment(lasso_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
lasso <- autoplot(roc_lasso_curve)
#boosted tree
boost_pre <- predict(final_fit_boost,new_data=iris_test,type="class")
auc_test_boost<-augment(final_fit_boost,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_boost<-augment(final_fit_boost,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_boost_curve <- augment(final_fit_boost,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
boost <- autoplot(roc_boost_curve)
#random forest
rand_pre <- predict(random_final_fit,new_data=iris_test,type="class")
auc_test_rand<-augment(random_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_rand<-augment(random_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_rand_curve <- augment(random_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
random <- autoplot(roc_rand_curve)
#knn
knn_pre <- predict(knn_final_fit,new_data=iris_test,type="class")
auc_test_knn<-augment(knn_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_knn<-augment(knn_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_knn_curve <- augment(knn_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
knn <- autoplot(roc_knn_curve)
lasso
boost
random
knn
result_auc <- c(auc_test_lasso$.estimate,
auc_test_boost$.estimate,
auc_test_rand$.estimate,
auc_test_knn$.estimate)
iris_mod_names <- c(
"lasso",
"boost",
"random forest",
"knn")
model_test <- tibble(Model = iris_mod_names,
roc_auc = result_auc)
model_test
result_acc <- c(acc_test_lasso$.estimate,
acc_test_boost$.estimate,
acc_test_rand$.estimate,
acc_test_knn$.estimate)
iris_acc_test <- tibble(Model = iris_mod_names,
Accuracy = result_acc)
acc_test
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(kableExtra)
set.seed(3435) # can be any number
iris <- read_csv(file = "iris.csv") %>%
na.omit() %>%
mutate(Species = case_when(Species == "Iris-setosa" ~ 0,
Species == "Iris-versicolor" ~ 1,
Species == "Iris-virginica" ~ 2)) %>%
clean_names()
iris$species <- as.factor(iris$species)
iris_split <- iris %>%
initial_split(strata = species, prop = 0.8)
iris_train <- training(iris_split)
iris_test <- testing(iris_split)
iris_recipe <-
recipe(species ~ sepal_length_cm + sepal_width_cm + petal_length_cm + petal_width_cm,
data = iris) %>%
step_dummy(all_nominal_predictors()) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
iris_folds <- vfold_cv(iris_train, strata = species,
v = 5)
iris_lasso_spec <- multinom_reg(penalty = tune(),
mixture = tune()) %>%
set_mode("classification") %>%
set_engine("glmnet")
iris_workflow <- workflow() %>%
add_recipe(iris_recipe) %>%
add_model(iris_lasso_spec)
iris_grid <- grid_regular(penalty(range = c(-5, 5)),
mixture(range = c(0, 1)), levels = 10)
tune_res <- tune_grid(
iris_workflow,
resamples = iris_folds,
grid = iris_grid
)
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(kableExtra)
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(tidyverse)
library(janitor)
library(here)
library(kableExtra)
iris_numer <- iris %>%
select_if(is.numeric)
iris_cor <- cor(iris_numer)
iris_cor_plot <- corrplot(iris_cor,
order = 'AOE')
iris_train %>%
ggplot(aes(x=sepal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=sepal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x =species)) +
geom_bar()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = F)
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(tidyverse)
library(janitor)
library(here)
library(corrr)
library(kableExtra)
library(corrplot)
iris_numer <- iris %>%
select_if(is.numeric) %>%
mutate(-id)
iris_cor <- cor(iris_numer)
iris_cor_plot <- corrplot(iris_cor,
order = 'AOE')
iris_numer <- iris %>%
select_if(is.numeric)
iris_cor <- cor(iris_numer)
iris_cor_plot <- corrplot(iris_cor,
order = 'AOE')
iris_numer <- iris %>%
select_if(is.numeric) %>%
select(-id)
iris_cor <- cor(iris_numer)
iris_cor_plot <- corrplot(iris_cor,
order = 'AOE')
set.seed(3435) # can be any number
iris <- read_csv(file = "iris.csv") %>%
na.omit() %>%
mutate(Species = case_when(Species == "Iris-setosa" ~ 0,
Species == "Iris-versicolor" ~ 1,
Species == "Iris-virginica" ~ 2)) %>%
clean_names()
set.seed(3435) # can be any number
iris <- read_csv(file = "iris.csv") %>%
na.omit() %>%
mutate(Species = case_when(Species == "Iris-setosa" ~ 0,
Species == "Iris-versicolor" ~ 1,
Species == "Iris-virginica" ~ 2)) %>%
clean_names()
iris$species <- as.factor(iris$species)
iris
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/lasso.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/boost.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/random_forest.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/knn.RData")
library(tidymodels)
source("~/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/boost.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = F)
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(tidyverse)
library(janitor)
library(here)
library(corrr)
library(kableExtra)
library(corrplot)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = F)
library(tidymodels)
library(discrim)
library(poissonreg)
library(corrr)
tidymodels_prefer()
suppressMessages(library(tidyquant))
library(ggplot2)
library(fitdistrplus)
library(reshape2)
library(patchwork)
library(parallel)
library(tidyverse)
library(janitor)
library(here)
library(corrr)
library(kableExtra)
library(corrplot)
set.seed(3435) # can be any number
iris <- read_csv(file = "iris.csv") %>%
na.omit() %>%
mutate(Species = case_when(Species == "Iris-setosa" ~ 0,
Species == "Iris-versicolor" ~ 1,
Species == "Iris-virginica" ~ 2)) %>%
clean_names()
iris$species <- as.factor(iris$species)
iris
iris_split <- iris %>%
initial_split(strata = species, prop = 0.8)
iris_train <- training(iris_split)
iris_test <- testing(iris_split)
dim(iris_train)
dim(iris_test)
iris_numer <- iris %>%
select_if(is.numeric) %>%
select(-id)
iris_cor <- cor(iris_numer)
iris_cor_plot <- corrplot(iris_cor,
order = 'AOE')
iris_train %>%
ggplot(aes(x=sepal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=sepal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_length_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x=petal_width_cm, y=species)) +
geom_point(alpha = 0.2) +
geom_smooth(method = 'lm', formula = 'y ~ x',colour = "navajowhite")
iris_train %>%
ggplot(aes(x =species)) +
geom_bar()
iris_recipe <-
recipe(species ~ sepal_length_cm + sepal_width_cm + petal_length_cm + petal_width_cm,
data = iris) %>%
step_dummy(all_nominal_predictors()) %>%
step_center(all_predictors()) %>%
step_scale(all_predictors())
iris_folds <- vfold_cv(iris_train, strata = species,
v = 5)
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/lasso.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/boost.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/random_forest.RData")
load("/Users/xuao/Documents/2022Fall/Pstat131/PSTAT231/final_project_aoxu/knn.RData")
autoplot(tune_res)
autoplot(tune_res_boost)
autoplot(tune_res_forest)
autoplot(tune_res_knn)
tune_lasso_roc <- augment(lasso_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_boost_roc <- augment(final_fit_boost, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_rand_roc <- augment(random_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
tune_knn_roc <- augment(knn_final_fit, new_data = iris_train) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
model_roc <- c(tune_lasso_roc$.estimate,
tune_boost_roc$.estimate,
tune_rand_roc$.estimate,
tune_knn_roc$.estimate)
iris_model_names <- c(
"lasso",
"boosted_tree",
"random_forest",
"knn")
model_results <- tibble(Model = iris_model_names,
roc_auc = model_roc)
modelresults <- model_results %>%
arrange(-model_roc)
modelresults
#lasso
lasso_pre <- predict(lasso_final_fit,new_data=iris_test,type="class")
auc_test_lasso<-augment(lasso_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_lasso<-augment(lasso_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_lasso_curve <- augment(lasso_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
lasso <- autoplot(roc_lasso_curve)
#boosted tree
boost_pre <- predict(final_fit_boost,new_data=iris_test,type="class")
auc_test_boost<-augment(final_fit_boost,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_boost<-augment(final_fit_boost,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_boost_curve <- augment(final_fit_boost,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
boost <- autoplot(roc_boost_curve)
#random forest
rand_pre <- predict(random_final_fit,new_data=iris_test,type="class")
auc_test_rand<-augment(random_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_rand<-augment(random_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_rand_curve <- augment(random_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
random <- autoplot(roc_rand_curve)
#knn
knn_pre <- predict(knn_final_fit,new_data=iris_test,type="class")
auc_test_knn<-augment(knn_final_fit,new_data=iris_test) %>%
roc_auc(species,.pred_0,.pred_1, .pred_2) %>%
select(.estimate)
acc_test_knn<-augment(knn_final_fit,new_data=iris_test) %>%
accuracy(truth=species,estimate=.pred_class)
roc_knn_curve <- augment(knn_final_fit,new_data=iris_test) %>%
roc_curve(species,.pred_0,.pred_1, .pred_2)
knn <- autoplot(roc_knn_curve)
lasso
boost
random
knn
result_auc <- c(auc_test_lasso$.estimate,
auc_test_boost$.estimate,
auc_test_rand$.estimate,
auc_test_knn$.estimate)
iris_mod_names <- c(
"lasso",
"boost",
"random forest",
"knn")
model_test <- tibble(Model = iris_mod_names,
roc_auc = result_auc)
model_test
result_acc <- c(acc_test_lasso$.estimate,
acc_test_boost$.estimate,
acc_test_rand$.estimate,
acc_test_knn$.estimate)
iris_acc_test <- tibble(Model = iris_mod_names,
Accuracy = result_acc)
iris_acc_test
